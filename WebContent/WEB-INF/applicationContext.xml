<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
        <mvc:resources mapping="/resources/**" location="/resources/" />
 
   
    <context:annotation-config />
    <context:component-scan base-package="com.project.dao" />
   <beans profile = "development">
   
     	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >     	
	     	<property name="locations">
				<list>
					<value>classpath:development-jdbc.properties</value>
					<value>classpath:application.properties</value>
				</list>
			</property>
			<property name="ignoreUnresolvablePlaceholders" value="true"/>			
		</bean> -->
		
      	<!-- <bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    		<property name="jndiName" value="java:/MySqlDS" />
    		<property name="resourceRef" value="true" /> 
		</bean> -->  
		
      	<!--  <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      	
      		<property name="persistenceXmlLocation" value="classpath:config/persistence.xml" />
        	<property name="packagesToScan" value="com.project.model.*" />
        	<property name="persistenceUnitName" value="demoRestPersistence" />
        	<property name="dataSource" ref="jndiDataSource" /> 
        	<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        	<property name="jpaProperties">
			    <props>
			      <prop key="hibernate.show_sql">true</prop>
			    </props>
			  </property>
        	
    	</bean>  -->
    	
    	<!-- <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			  <property name="showSql" value="true"/>
			  <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
		</bean> --> 
    
    	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- setting maximum upload size -->
        	<property name="maxUploadSize" value="100000" />
 
    	</bean>
    	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>  
    	
    	<!-- jee:jndi-lookup is required for JPA and Persistence.xml configuration -->
    	<jee:jndi-lookup id="dbPersistence1" jndi-name="java:/MyEntityManagerFactory" />
  
        <tx:annotation-driven/> 
        
        <!-- <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>   -->
    	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      		<property name="entityManagerFactory" ref="dbPersistence1" />
  		</bean>  
    	<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="find*" read-only="true" />
				<tx:method name="*" />
			</tx:attributes>
		</tx:advice>
 
	</beans>
	<beans profile = "production">
	
    	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        	<property name="basenames" value="classpath:messages" />
        	<property name="defaultEncoding" value="UTF-8" />
    	</bean> 
	
     	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"  p:location="/WEB-INF/production-jdbc.properties" />
        
      	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
      	p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" />   
        
      	<bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        	<property name="dataSource" ref="dataSource" />
        	<property name="packagesToScan" value="com.project.model" />
        	<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        	<property name="jpaProperties">
			    <props>
			      <prop key="hibernate.show_sql">true</prop>
			      <prop key="hibernate.hbm2dll.auto">create</prop>
			    </props>
			  </property>
    	</bean>   
    	
    	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			  <property name="showSql" value="true"/>
			  <property name="generateDdl" value="true"/>
			  <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
		</bean>
    
    	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- setting maximum upload size -->
        	<property name="maxUploadSize" value="100000" />
 
    	</bean>
  
        <tx:annotation-driven transaction-manager="transactionManager"/>  
    	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      		<property name="entityManagerFactory" ref="entityManagerFactoryBean" />
  		</bean>
    	<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="find*" read-only="true" />
				<tx:method name="*" />
			</tx:attributes>
		</tx:advice>
 
	</beans>
	<!-- <beans profile = "production">
	
    	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        	<property name="basenames" value="classpath:messages" />
        	<property name="defaultEncoding" value="UTF-8" />
    	</bean> 
	
     	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"  p:location="/WEB-INF/production-jdbc.properties" />
        
      	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
      	p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" />   
        
      	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        	<property name="dataSource" ref="dataSource" />
        	<property name="packagesToScan" value="com.project.model" />
        	<property name="hibernateProperties">
            	<props>
                	<prop key="hibernate.dialect">${jdbc.dialect}</prop>
                	<prop key="hibernate.show_sql">true</prop>
            	</props>
        	</property>
    	</bean>   
    
    	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         setting maximum upload size
        	<property name="maxUploadSize" value="100000" />
 
    	</bean>
  
        <tx:annotation-driven transaction-manager="transactionManager"/>  
    	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        	<property name="sessionFactory" ref="sessionFactory" />
    	</bean>
    	<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="find*" read-only="true" />
				<tx:method name="*" />
			</tx:attributes>
		</tx:advice>
 
	</beans> --> 
</beans>